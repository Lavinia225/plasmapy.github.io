{
  "plasmapy": {
    "maintainer": {
      "name": null,
      "contact": null
    },
    "urls": {
      "home": "https://www.plasmapy.org",
      "repo": "https://github.com/plasmapy/plasmapy",
      "image": "/images/plasmapy-graphic-circular.png"
    },
    "description": {
      "short": "A open-source Python 3 package for plasma physics.",
      "long": "PlasmaPy is an open-source community developed Python 3 package for plasma physics.  PlasmaPy intends to be a collection of functionality commonly used and shared between plasma physicists and researchers globally."
    },
    "affiliated": true,
    "keywords": ["plasma", "physics", "Python 3"],
    "dates": {
      "added": "2020 November 12",
      "last_updated": "2020 November 12"
    },
    "status": "perpetual beta",
    "license": "BSD 3-clause with patent grant"
  },
  "tofu": {
    "maintainer": {
      "name": null,
      "contact": null
    },
    "urls": {
      "home": "https://tofuproject.github.io/tofu/",
      "repo": "https://github.com/ToFuProject/tofu",
      "image": ""
    },
    "description": {
      "short": "tofu is an open-source python library providing a toolbox for synthetic diagnostics and tomography.",
      "long": "tofu is an open-source python library.  It aims at providing the user with a ready-set toolbox for modelling synthetic diagnostics and performing tomographic inversions on linear or toroidal (quasi-axisymmetric) fusion devices.  It is relevant for diagnostics integrating an emissivity on a set of Lines of Sight or Volumes of Sight corresponding to as many detectors or pixels, and for which the plasma can be considered transparent (i.e.: not for radio-frequencies / microwaves).  Typical use cases include Soft X Ray, Hard X Ray or bolometry diagnostics.  Since tofu also includes the basics for handling reflections, it can also be relevant for visible cameras or IR cameras to some extent.  Recent developments aim at implementing the tools for modelling X-ray spectrometers (Bragg diffraction).  It is typically a command-line tool, best used from the ipython console. It is entirely scriptable. It does not provide a GUI although it does come with several specialized interactive plots for easier visualization. It provides several side features like an open database of tokamak geometries, a basic magnetic field-line tracing tool or native IMAS compatibility.  Parts of the code are currently being re-written for optimization / parallelization and are thus not temporarily unavailable (e.g.: tomographic inversions)."
    },
    "affiliated": true,
    "keywords": ["plasma", "physics", "Python 3", "fusion", "diagnostics"],
    "dates": {
      "added": "2020 November 17",
      "last_updated": "2020 November 17"
    },
    "status": "stable",
    "license": "MIT"
  }
}
